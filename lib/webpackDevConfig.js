!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("reactOneKit",[],t):"object"==typeof exports?exports.reactOneKit=t():e.reactOneKit=t()}(global,function(){return function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.w={},r(r.s=9)}([function(e,t){e.exports=require("babel-runtime/core-js/json/stringify")},function(e,t){e.exports=require("precss")},function(e,t){e.exports=require("autoprefixer")},function(e,t,r){"use strict";e.exports={ident:"postcss",plugins:function(e){return[r(2)(),r(1)()]}}},function(e,t,r){"use strict";e.exports={presets:["env","react"],plugins:["transform-runtime","syntax-dynamic-import","transform-object-rest-spread","babel-plugin-transform-class-properties","react-hot-loader/babel"]}},function(e,t){e.exports=require("webpack")},function(e,t){e.exports=require("path")},,,function(e,t,r){"use strict";var o,n=r(0),s=(o=n)&&o.__esModule?o:{default:o};r(6);var a=r(5),u=r(4),i=r(3);e.exports=function(e){var t=e.projectPath,r=e.clientEntryPath,o=e.clientOutputPath,n=e.api;return{mode:"development",entry:["react-hot-loader/patch","webpack-hot-middleware/client",r],output:{path:o,filename:"[name].js",publicPath:"/static/development/"},plugins:[new a.HotModuleReplacementPlugin,new a.DefinePlugin({"process.env":{NODE_ENV:(0,s.default)("development"),target:(0,s.default)("development"),targetenv:(0,s.default)("browser"),api:(0,s.default)(n)}})],module:{rules:[{test:/\.js$/,loader:"babel-loader",include:t,options:u},{test:/\.(css)$/,use:["style-loader",{loader:"css-loader",options:{modules:!0,importLoaders:1,localIdentName:"[name]__[local]___[hash:base64:5]"}},{loader:"postcss-loader",options:i}]}]}}}}])});